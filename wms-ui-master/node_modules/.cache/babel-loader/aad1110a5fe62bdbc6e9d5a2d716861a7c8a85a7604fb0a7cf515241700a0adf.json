{"ast":null,"code":"import $http from \"../http/base.js\";\nvar str = \" is_del=0 and 1=1\";\n\n//日期格式转换\nexport function formatDate(date) {\n  let time = new Date(date);\n  let year = time.getFullYear();\n  let month = time.getMonth() + 1;\n  month = month.toString().padStart(2, \"0\");\n  let day = time.getDate().toString().padStart(2, \"0\");\n  return year + \"年\" + month + \"月\" + day + \"日\";\n}\nexport default {\n  data() {\n    return {\n      tableloading: false,\n      //加载\n      showDefaultAttr: true,\n      multipleSelection: [],\n      // 选中的行数据\n      tableData: [],\n      textarea: \"\",\n      formInline: {\n        user: \"\",\n        region: \"\",\n        data1: \"\",\n        zt: \"\"\n      },\n      rules: {\n        dict_name: [{\n          required: true,\n          message: \"请输入字典名称\",\n          trigger: \"blur\"\n        }],\n        dict_label: [{\n          required: true,\n          message: \"请输入字典类型\",\n          trigger: \"blur\"\n        }]\n      },\n      arules: {\n        dict_name: [{\n          required: true,\n          message: \"请输入字典名称\",\n          trigger: \"blur\"\n        }],\n        dict_label: [{\n          required: true,\n          message: \"请输入字典类型\",\n          trigger: \"blur\"\n        }]\n      },\n      UpdateType: {\n        dict_name: \"\",\n        dict_label: \"\",\n        status: \"\",\n        remark: \"\",\n        dict_id: 0\n      },\n      AddType: {\n        dict_name: \"\",\n        dict_label: \"\",\n        status: \"\",\n        remark: \"\"\n      },\n      adialogVisible: false,\n      dialogVisible: false,\n      value: true,\n      currentPage: 1,\n      //当前页\n      pagesize: 4,\n      //每页显示数\n      rows: 0 //总行数\n    };\n  },\n\n  methods: {\n    //查询方法\n    find() {\n      $http.get(\"http://localhost:5149/api/Sys_encode/Find_dictType\", {\n        params: {\n          CurrentPage: this.currentPage,\n          PageSize: this.pagesize,\n          str\n        }\n      }).then(res => {\n        this.tableData = res.list;\n        this.rows = res.rows;\n        localStorage.setItem(\"idd\", res.list.dict_id);\n        console.log(res);\n      });\n    },\n    add() {\n      this.adialogVisible = true;\n    },\n    insertok() {\n      var uname = localStorage.getItem(\"b\");\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          $http.post(\"http://localhost:5149/api/Sys_encode/AddSys_dict_type?dict_name=\" + this.AddType.dict_name + \"&dict_label=\" + this.AddType.dict_label + \"&status=\" + this.AddType.status + \"&remark=\" + this.AddType.remark + \"&create_by=\" + uname + \"&is_del=\" + 0 + \"\").then(res => {\n            if (res) {\n              this.$message({\n                type: \"success\",\n                message: \"新增字典成功!\"\n              });\n              this.find();\n              this.adialogVisible = false;\n            }\n          });\n        }\n      });\n    },\n    type(obj) {\n      console.log(obj);\n    },\n    //重置\n    reset() {\n      this.formInline = {\n        region: \"\",\n        data1: \"\",\n        user: \"\",\n        zt: \"\"\n      };\n      console.log(\"reset!\");\n    },\n    //搜索\n    search() {\n      str = \" 1=1 \";\n      if (this.formInline.region != null) {\n        str += \"and dict_name  like'%\" + this.formInline.region + \"%'\";\n      }\n      if (this.formInline.user != null) {\n        str += \"and dict_label  like'%\" + this.formInline.user + \"%'\";\n      }\n      if (this.formInline.zt != null) {\n        str += \"and status  like'%\" + this.formInline.zt + \"%'\";\n      }\n      // if (this.formInline.data1 != null) {\n      //     str += \" and  create_time BETWEEN '2023-12-05' AND '2023-12-06'\";\n      // str += \" and create_time between'\" + start + \" 'and'\" + end + \"'\";\n      //      str += \"and create_time  '%\" + this.formInline.data1 + \"%'\";\n      // }\n      // alert(str);\n      this.find();\n    },\n    type(obj) {\n      localStorage.setItem(\"iidd\", obj.dict_id);\n      console.log(obj);\n      this.$router.push({\n        path: `/DictionaryData/${obj.dict_id}/${obj.dict_label}`\n      });\n      // this.$router.push({ path: '/DictionaryData', query: { index: obj.dict_id } });\n      // this.$router.push('DictionaryData');\n    },\n\n    //选择\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n      console.log(this.multipleSelection);\n    },\n    //修改\n    handleEdit(obj) {\n      this.dialogVisible = true;\n      this.UpdateType.dict_name = obj.dict_name;\n      this.UpdateType.dict_label = obj.dict_label;\n      this.UpdateType.status = obj.status;\n      this.UpdateType.remark = obj.remark;\n      this.UpdateType.dict_id = obj.dict_id;\n      console.log(obj);\n    },\n    updateok() {\n      var uname = localStorage.getItem(\"b\");\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          $http.put(\"http://localhost:5149/api/Sys_encode/UpdateSys_dict_type?dict_name=\" + this.UpdateType.dict_name + \"&dict_label=\" + this.UpdateType.dict_label + \"&status=\" + this.UpdateType.status + \"&remark=\" + this.UpdateType.remark + \"&update_by=\" + uname + \"&dict_id=\" + this.UpdateType.dict_id + \"\").then(res => {\n            if (res) {\n              this.$message({\n                type: \"success\",\n                message: \"修改字典成功!\"\n              });\n              this.find();\n              this.dialogVisible = false;\n            }\n          });\n        }\n      });\n    },\n    //删除\n    handleDelete(id) {\n      this.$confirm(\"此操作将永久删除该信息, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        $http.put(\"http://localhost:5149/api/Sys_encode/Delete_dict_type?is_del=\" + 1 + \"&dict_id=\" + id + \"\").then(res => {\n          if (res) {\n            this.$message({\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n            this.find();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"error\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    //每页显示数改变事件\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.currentPage = 1;\n      this.find();\n    },\n    //页码改变事件\n    handleCurrentChange(page) {\n      this.currentPage = page;\n      this.find();\n    },\n    //刷新table\n    flushed() {\n      this.tableloading = true;\n      // 模拟获取接口数据\n      setTimeout(() => {\n        //调用find();\n        this.find();\n        this.tableloading = false;\n      }, 1000);\n      //直接this.查询方法();\n    },\n\n    //批量删除\n    delAll() {\n      alert(\"123\");\n      //   const length = this.multipleSelection.length;\n      //   for (let i = 0; i < length; i++) {\n      //     this.delarr.push(this.multipleSelection[i].PackingId)\n      //   }\n    },\n\n    filterTime(timestamp) {\n      return formatDate(timestamp);\n    }\n  },\n  mounted() {\n    this.find();\n  }\n};","map":{"version":3,"names":["$http","str","formatDate","date","time","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","data","tableloading","showDefaultAttr","multipleSelection","tableData","textarea","formInline","user","region","data1","zt","rules","dict_name","required","message","trigger","dict_label","arules","UpdateType","status","remark","dict_id","AddType","adialogVisible","dialogVisible","value","currentPage","pagesize","rows","methods","find","get","params","CurrentPage","PageSize","then","res","list","localStorage","setItem","console","log","add","insertok","uname","getItem","$refs","ruleForm","validate","valid","post","$message","type","obj","reset","search","$router","push","path","handleSelectionChange","val","handleEdit","updateok","put","handleDelete","id","$confirm","confirmButtonText","cancelButtonText","catch","handleSizeChange","size","handleCurrentChange","page","flushed","setTimeout","delAll","alert","filterTime","timestamp","mounted"],"sources":["src/components/DictionaryManage.vue"],"sourcesContent":["<template>\r\n  <div id=\"kj\">\r\n    <!--头部-->\r\n    <el-breadcrumb separator=\"/\" id=\"card\">\r\n      <el-breadcrumb-item :to=\"{ path: '/Home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item\r\n        ><a href=\"javascript:void(0)\">系统设置</a></el-breadcrumb-item\r\n      >\r\n      <el-breadcrumb-item>数字字典</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!--搜索-->\r\n\r\n    <transition-group name=\"lyric\">\r\n      <div id=\"form\" v-if=\"showDefaultAttr\" key=\"1\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"字典名称\" id=\"form_top\">\r\n            <el-input\r\n              v-model=\"formInline.region\"\r\n              id=\"tex\"\r\n              placeholder=\"审批人\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典类型\" id=\"form_top\">\r\n            <el-input\r\n              v-model=\"formInline.user\"\r\n              id=\"tex\"\r\n              placeholder=\"审批人\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" id=\"form_top\">\r\n            <el-select v-model=\"formInline.zt\" id=\"tex\" placeholder=\"活动区域\">\r\n              <el-option label=\"正常\" value=\"0\">正常</el-option>\r\n              <el-option label=\"停用\" value=\"1\">停用</el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"查询日期\">\r\n            <el-date-picker\r\n              v-model=\"formInline.data1\"\r\n              type=\"datetimerange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n            >\r\n            </el-date-picker>\r\n          </el-form-item>\r\n\r\n          <el-form-item id=\"w\">\r\n            <el-button\r\n              @click=\"search()\"\r\n              type=\"primary\"\r\n              id=\"tex1\"\r\n              icon=\"el-icon-search\"\r\n              >搜索</el-button\r\n            >\r\n            <el-button @click=\"reset()\" id=\"tex2\" icon=\"el-icon-refresh\"\r\n              >重置</el-button\r\n            >\r\n            <!-- <el-button type=\"primary\" @click=\"search\">高级搜索</el-button> -->\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </transition-group>\r\n\r\n    <!--按钮-->\r\n    <div id=\"an\">\r\n      <el-button id=\"tex3\" icon=\"el-icon-plus\" @click=\"add()\">新增</el-button>\r\n      <!-- <el-button  id=\"tex4\"  icon=\"el-icon-edit\">修改</el-button> -->\r\n      <el-button\r\n        id=\"tex5\"\r\n        @click=\"delAll()\"\r\n        icon=\"el-icon-delete\"\r\n        :disabled=\"multipleSelection.length == 0\"\r\n        >删除</el-button\r\n      >\r\n      <el-button id=\"tex7\" icon=\"el-icon-upload2\">导入</el-button>\r\n      <el-button id=\"tex6\" icon=\"el-icon-download\">导出</el-button>\r\n    </div>\r\n    <!--隐藏-->\r\n    <div id=\"an1\">\r\n      <el-button\r\n        icon=\"el-icon-search\"\r\n        circle\r\n        @click=\"showDefaultAttr = !showDefaultAttr\"\r\n        title=\"展开\"\r\n      ></el-button>\r\n      <el-button\r\n        icon=\"el-icon-refresh\"\r\n        circle\r\n        @click=\"flushed\"\r\n        title=\"刷新\"\r\n      ></el-button>\r\n    </div>\r\n    <!-- 表单 -->\r\n    <el-table\r\n      tooltip-effect=\"dark\"\r\n      v-loading=\"tableloading\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      :data=\"tableData\"\r\n      :header-cell-style=\"{ background: '#F8F8F9', color: '#606266' }\"\r\n      id=\"tableMain\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\r\n      <el-table-column fixed prop=\"dict_id\" label=\"字典编号\" width=\"130\">\r\n      </el-table-column>\r\n      <el-table-column fixed prop=\"dict_name\" label=\"字典名称\" width=\"130\">\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"字典类型\" width=\"150\">\r\n        <template slot-scope=\"scope\">\r\n          <a href=\"javascript:void(0)\" @click=\"type(scope.row)\">{{\r\n            scope.row.dict_label\r\n          }}</a>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"状态\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <div v-if=\"scope.row.status == 0\">\r\n            <el-tag>正常</el-tag>\r\n          </div>\r\n          <div v-if=\"scope.row.status == 1\">\r\n            <el-tag type=\"danger\">异常 </el-tag>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed prop=\"remark\" label=\"备注\" width=\"135\">\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"创建时间\" width=\"135\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ filterTime(scope.row.create_time) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <!-- <el-table-column label=\"状态\" width=\"130\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-switch v-model=\"scope.row.u_State\" active-color=\"#13ce66\" active-value=\"0\" inactive-value=\"1\"\r\n                        inactive-color=\"#ff4949\" @change=\"changeSwitch(scope.row)\">\r\n                    </el-switch>\r\n                </template>\r\n            </el-table-column> -->\r\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"100\">\r\n        <template slot-scope=\"scope\">\r\n          <img\r\n            src=\"../Images/bianji1.png\"\r\n            title=\"编辑\"\r\n            @click=\"handleEdit(scope.row)\"\r\n          />\r\n          <img\r\n            src=\"../Images/shanchu.png\"\r\n            style=\"margin-left: 10px\"\r\n            title=\"删除\"\r\n            @click=\"handleDelete(scope.row.dict_id)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      id=\"fenye\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"currentPage\"\r\n      :page-sizes=\"[4, 8, 12, 16]\"\r\n      :page-size=\"pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"rows\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!--添加模态框-->\r\n    <el-dialog\r\n      title=\"新增字典\"\r\n      :visible.sync=\"adialogVisible\"\r\n      width=\"700px\"\r\n      style=\"position: relative; top: 10px\"\r\n    >\r\n      <span>\r\n        <el-form :model=\"AddType\" :rules=\"rules\" ref=\"ruleForm\">\r\n          <el-form-item label=\"字典名称\" prop=\"dict_name\">\r\n            <el-input v-model=\"AddType.dict_name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典类型\" prop=\"dict_label\">\r\n            <el-input v-model=\"AddType.dict_label\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" prop=\"status\">\r\n            <el-radio-group v-model=\"AddType.status\" style=\"margin-bottom: 0\">\r\n              <el-radio label=\"0\">正常</el-radio>\r\n              <el-radio label=\"1\">停用</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item label=\"备注\" prop=\"remark\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"AddType.remark\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </span>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"adialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"insertok()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!--修改模态框-->\r\n    <el-dialog title=\"新增字典\" :visible.sync=\"dialogVisible\" width=\"700px\">\r\n      <span>\r\n        <el-form :model=\"UpdateType\" :rules=\"arules\" ref=\"ruleForm\">\r\n          <el-form-item label=\"字典名称\" prop=\"dict_name\">\r\n            <el-input v-model=\"UpdateType.dict_name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典类型\" prop=\"dict_label\">\r\n            <el-input v-model=\"UpdateType.dict_label\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" prop=\"status\">\r\n            <el-radio-group\r\n              v-model=\"UpdateType.status\"\r\n              style=\"margin-bottom: 0\"\r\n            >\r\n              <el-radio label=\"0\">正常</el-radio>\r\n              <el-radio label=\"1\">停用</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item label=\"备注\" prop=\"remark\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"UpdateType.remark\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </span>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateok()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $http from \"../http/base.js\";\r\nvar str = \" is_del=0 and 1=1\";\r\n\r\n//日期格式转换\r\nexport function formatDate(date) {\r\n  let time = new Date(date);\r\n\r\n  let year = time.getFullYear();\r\n\r\n  let month = time.getMonth() + 1;\r\n  month = month.toString().padStart(2, \"0\");\r\n  let day = time.getDate().toString().padStart(2, \"0\");\r\n  return year + \"年\" + month + \"月\" + day + \"日\";\r\n}\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableloading: false, //加载\r\n      showDefaultAttr: true,\r\n      multipleSelection: [], // 选中的行数据\r\n      tableData: [],\r\n      textarea: \"\",\r\n      formInline: {\r\n        user: \"\",\r\n        region: \"\",\r\n        data1: \"\",\r\n        zt: \"\",\r\n      },\r\n      rules: {\r\n        dict_name: [\r\n          { required: true, message: \"请输入字典名称\", trigger: \"blur\" },\r\n        ],\r\n        dict_label: [\r\n          { required: true, message: \"请输入字典类型\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      arules: {\r\n        dict_name: [\r\n          { required: true, message: \"请输入字典名称\", trigger: \"blur\" },\r\n        ],\r\n        dict_label: [\r\n          { required: true, message: \"请输入字典类型\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      UpdateType: {\r\n        dict_name: \"\",\r\n        dict_label: \"\",\r\n        status: \"\",\r\n        remark: \"\",\r\n        dict_id: 0,\r\n      },\r\n      AddType: {\r\n        dict_name: \"\",\r\n        dict_label: \"\",\r\n        status: \"\",\r\n        remark: \"\",\r\n      },\r\n      adialogVisible: false,\r\n      dialogVisible: false,\r\n      value: true,\r\n      currentPage: 1, //当前页\r\n      pagesize: 4, //每页显示数\r\n      rows: 0, //总行数\r\n    };\r\n  },\r\n  methods: {\r\n    //查询方法\r\n    find() {\r\n      $http\r\n        .get(\"http://localhost:5149/api/Sys_encode/Find_dictType\", {\r\n          params: {\r\n            CurrentPage: this.currentPage,\r\n            PageSize: this.pagesize,\r\n            str,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.tableData = res.list;\r\n          this.rows = res.rows;\r\n          localStorage.setItem(\"idd\", res.list.dict_id);\r\n          console.log(res);\r\n        });\r\n    },\r\n    add() {\r\n      this.adialogVisible = true;\r\n    },\r\n    insertok() {\r\n      var uname = localStorage.getItem(\"b\");\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          $http\r\n            .post(\r\n              \"http://localhost:5149/api/Sys_encode/AddSys_dict_type?dict_name=\" +\r\n                this.AddType.dict_name +\r\n                \"&dict_label=\" +\r\n                this.AddType.dict_label +\r\n                \"&status=\" +\r\n                this.AddType.status +\r\n                \"&remark=\" +\r\n                this.AddType.remark +\r\n                \"&create_by=\" +\r\n                uname +\r\n                \"&is_del=\" +\r\n                0 +\r\n                \"\"\r\n            )\r\n            .then((res) => {\r\n              if (res) {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"新增字典成功!\",\r\n                });\r\n                this.find();\r\n                this.adialogVisible = false;\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n    type(obj) {\r\n      console.log(obj);\r\n    },\r\n    //重置\r\n    reset() {\r\n      this.formInline = {\r\n        region: \"\",\r\n        data1: \"\",\r\n        user: \"\",\r\n        zt: \"\",\r\n      };\r\n      console.log(\"reset!\");\r\n    },\r\n    //搜索\r\n    search() {\r\n      str = \" 1=1 \";\r\n      if (this.formInline.region != null) {\r\n        str += \"and dict_name  like'%\" + this.formInline.region + \"%'\";\r\n      }\r\n      if (this.formInline.user != null) {\r\n        str += \"and dict_label  like'%\" + this.formInline.user + \"%'\";\r\n      }\r\n      if (this.formInline.zt != null) {\r\n        str += \"and status  like'%\" + this.formInline.zt + \"%'\";\r\n      }\r\n      // if (this.formInline.data1 != null) {\r\n      //     str += \" and  create_time BETWEEN '2023-12-05' AND '2023-12-06'\";\r\n      // str += \" and create_time between'\" + start + \" 'and'\" + end + \"'\";\r\n      //      str += \"and create_time  '%\" + this.formInline.data1 + \"%'\";\r\n      // }\r\n      // alert(str);\r\n      this.find();\r\n    },\r\n    type(obj) {\r\n      localStorage.setItem(\"iidd\", obj.dict_id);\r\n      console.log(obj);\r\n      this.$router.push({\r\n        path: `/DictionaryData/${obj.dict_id}/${obj.dict_label}`,\r\n      });\r\n      // this.$router.push({ path: '/DictionaryData', query: { index: obj.dict_id } });\r\n      // this.$router.push('DictionaryData');\r\n    },\r\n    //选择\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n      console.log(this.multipleSelection);\r\n    },\r\n    //修改\r\n    handleEdit(obj) {\r\n      this.dialogVisible = true;\r\n      this.UpdateType.dict_name = obj.dict_name;\r\n      this.UpdateType.dict_label = obj.dict_label;\r\n      this.UpdateType.status = obj.status;\r\n      this.UpdateType.remark = obj.remark;\r\n      this.UpdateType.dict_id = obj.dict_id;\r\n\r\n      console.log(obj);\r\n    },\r\n    updateok() {\r\n      var uname = localStorage.getItem(\"b\");\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          $http\r\n            .put(\r\n              \"http://localhost:5149/api/Sys_encode/UpdateSys_dict_type?dict_name=\" +\r\n                this.UpdateType.dict_name +\r\n                \"&dict_label=\" +\r\n                this.UpdateType.dict_label +\r\n                \"&status=\" +\r\n                this.UpdateType.status +\r\n                \"&remark=\" +\r\n                this.UpdateType.remark +\r\n                \"&update_by=\" +\r\n                uname +\r\n                \"&dict_id=\" +\r\n                this.UpdateType.dict_id +\r\n                \"\"\r\n            )\r\n            .then((res) => {\r\n              if (res) {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"修改字典成功!\",\r\n                });\r\n                this.find();\r\n                this.dialogVisible = false;\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n    //删除\r\n    handleDelete(id) {\r\n      this.$confirm(\"此操作将永久删除该信息, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          $http\r\n            .put(\r\n              \"http://localhost:5149/api/Sys_encode/Delete_dict_type?is_del=\" +\r\n                1 +\r\n                \"&dict_id=\" +\r\n                id +\r\n                \"\"\r\n            )\r\n            .then((res) => {\r\n              if (res) {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"删除成功!\",\r\n                });\r\n                this.find();\r\n              }\r\n            });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    //每页显示数改变事件\r\n    handleSizeChange(size) {\r\n      this.pagesize = size;\r\n      this.currentPage = 1;\r\n      this.find();\r\n    },\r\n    //页码改变事件\r\n    handleCurrentChange(page) {\r\n      this.currentPage = page;\r\n      this.find();\r\n    },\r\n    //刷新table\r\n    flushed() {\r\n      this.tableloading = true;\r\n      // 模拟获取接口数据\r\n      setTimeout(() => {\r\n        //调用find();\r\n        this.find();\r\n        this.tableloading = false;\r\n      }, 1000);\r\n      //直接this.查询方法();\r\n    },\r\n    //批量删除\r\n    delAll() {\r\n      alert(\"123\");\r\n      //   const length = this.multipleSelection.length;\r\n      //   for (let i = 0; i < length; i++) {\r\n      //     this.delarr.push(this.multipleSelection[i].PackingId)\r\n      //   }\r\n    },\r\n    filterTime(timestamp) {\r\n      return formatDate(timestamp);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.find();\r\n  },\r\n};\r\n</script>\r\n<style scoped src=\"../CSS/public.css\"></style>\r\n\r\n<style>\r\n#w {\r\n  margin-left: 20px;\r\n}\r\n\r\n#card {\r\n  height: 35px;\r\n  line-height: 35px;\r\n  margin-left: 20px;\r\n}\r\n\r\n#form {\r\n  margin-top: 15px;\r\n  width: 1020px;\r\n  box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.2);\r\n  margin-left: 65px;\r\n}\r\n\r\n#form_top {\r\n  margin-right: 25px !important;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.el-col-2 {\r\n  width: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.el-form--inline .el-form-item__label {\r\n  float: none;\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  font-size: 13px;\r\n}\r\n\r\n#tex {\r\n  width: 240px;\r\n  height: 32px;\r\n}\r\n\r\n#tex1 {\r\n  width: 28px !important;\r\n  color: #fff;\r\n  background-color: #409eff;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex2 {\r\n  width: 28px !important;\r\n  color: #000;\r\n  background-color: #fff;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n}\r\n\r\n#tex3 {\r\n  border: 1px solid #add2fb;\r\n  color: #448ef8;\r\n  background-color: #eaf4fe;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex4 {\r\n  border: 1px solid #d7f4e1;\r\n  color: #8edfa8;\r\n  background-color: #ebf9f1;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex5 {\r\n  border: 1px solid #f9dcdc;\r\n  color: #f29895;\r\n  background-color: #fceeed;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex6 {\r\n  border: 1px solid #fae4a2;\r\n  color: #f8c341;\r\n  background-color: #fef8e8;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex7 {\r\n  border: 1px solid #d3d4d6;\r\n  color: #919398;\r\n  background-color: #f4f4f5;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex3:hover {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n}\r\n\r\n#tex4:hover {\r\n  background-color: #5fcb71;\r\n  color: #fff;\r\n}\r\n\r\n#tex5:hover {\r\n  background-color: #ff4949;\r\n  color: #fff;\r\n}\r\n\r\n#tex6:hover {\r\n  background-color: #f5bd41;\r\n  color: #fff;\r\n}\r\n\r\n#tex7:hover {\r\n  background-color: #919398;\r\n  color: #fff;\r\n}\r\n\r\n#an1 {\r\n  float: right;\r\n  position: relative;\r\n  top: 9px;\r\n  right: 64px;\r\n}\r\n\r\n.lyric-enter,\r\n.lyric-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(15px);\r\n}\r\n\r\n.lyric-enter-to,\r\n.lyric-leave {\r\n  opacity: 1;\r\n}\r\n\r\n.lyric-enter-active,\r\n.lyric-leave-active {\r\n  transition: all 0.4s ease-out;\r\n}\r\n</style>"],"mappings":"AAmPA,OAAAA,KAAA;AACA,IAAAC,GAAA;;AAEA;AACA,gBAAAC,WAAAC,IAAA;EACA,IAAAC,IAAA,OAAAC,IAAA,CAAAF,IAAA;EAEA,IAAAG,IAAA,GAAAF,IAAA,CAAAG,WAAA;EAEA,IAAAC,KAAA,GAAAJ,IAAA,CAAAK,QAAA;EACAD,KAAA,GAAAA,KAAA,CAAAE,QAAA,GAAAC,QAAA;EACA,IAAAC,GAAA,GAAAR,IAAA,CAAAS,OAAA,GAAAH,QAAA,GAAAC,QAAA;EACA,OAAAL,IAAA,SAAAE,KAAA,SAAAI,GAAA;AACA;AACA;EACAE,KAAA;IACA;MACAC,YAAA;MAAA;MACAC,eAAA;MACAC,iBAAA;MAAA;MACAC,SAAA;MACAC,QAAA;MACAC,UAAA;QACAC,IAAA;QACAC,MAAA;QACAC,KAAA;QACAC,EAAA;MACA;MACAC,KAAA;QACAC,SAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,UAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,MAAA;QACAL,SAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,UAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAG,UAAA;QACAN,SAAA;QACAI,UAAA;QACAG,MAAA;QACAC,MAAA;QACAC,OAAA;MACA;MACAC,OAAA;QACAV,SAAA;QACAI,UAAA;QACAG,MAAA;QACAC,MAAA;MACA;MACAG,cAAA;MACAC,aAAA;MACAC,KAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,IAAA;IACA;EACA;;EACAC,OAAA;IACA;IACAC,KAAA;MACA5C,KAAA,CACA6C,GAAA;QACAC,MAAA;UACAC,WAAA,OAAAP,WAAA;UACAQ,QAAA,OAAAP,QAAA;UACAxC;QACA;MACA,GACAgD,IAAA,CAAAC,GAAA;QACA,KAAAhC,SAAA,GAAAgC,GAAA,CAAAC,IAAA;QACA,KAAAT,IAAA,GAAAQ,GAAA,CAAAR,IAAA;QACAU,YAAA,CAAAC,OAAA,QAAAH,GAAA,CAAAC,IAAA,CAAAhB,OAAA;QACAmB,OAAA,CAAAC,GAAA,CAAAL,GAAA;MACA;IACA;IACAM,IAAA;MACA,KAAAnB,cAAA;IACA;IACAoB,SAAA;MACA,IAAAC,KAAA,GAAAN,YAAA,CAAAO,OAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA/D,KAAA,CACAgE,IAAA,CACA,qEACA,KAAA5B,OAAA,CAAAV,SAAA,GACA,iBACA,KAAAU,OAAA,CAAAN,UAAA,GACA,aACA,KAAAM,OAAA,CAAAH,MAAA,GACA,aACA,KAAAG,OAAA,CAAAF,MAAA,GACA,gBACAwB,KAAA,GACA,aACA,IACA,EACA,EACAT,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA;cACA,KAAAe,QAAA;gBACAC,IAAA;gBACAtC,OAAA;cACA;cACA,KAAAgB,IAAA;cACA,KAAAP,cAAA;YACA;UACA;QACA;MACA;IACA;IACA6B,KAAAC,GAAA;MACAb,OAAA,CAAAC,GAAA,CAAAY,GAAA;IACA;IACA;IACAC,MAAA;MACA,KAAAhD,UAAA;QACAE,MAAA;QACAC,KAAA;QACAF,IAAA;QACAG,EAAA;MACA;MACA8B,OAAA,CAAAC,GAAA;IACA;IACA;IACAc,OAAA;MACApE,GAAA;MACA,SAAAmB,UAAA,CAAAE,MAAA;QACArB,GAAA,mCAAAmB,UAAA,CAAAE,MAAA;MACA;MACA,SAAAF,UAAA,CAAAC,IAAA;QACApB,GAAA,oCAAAmB,UAAA,CAAAC,IAAA;MACA;MACA,SAAAD,UAAA,CAAAI,EAAA;QACAvB,GAAA,gCAAAmB,UAAA,CAAAI,EAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAoB,IAAA;IACA;IACAsB,KAAAC,GAAA;MACAf,YAAA,CAAAC,OAAA,SAAAc,GAAA,CAAAhC,OAAA;MACAmB,OAAA,CAAAC,GAAA,CAAAY,GAAA;MACA,KAAAG,OAAA,CAAAC,IAAA;QACAC,IAAA,qBAAAL,GAAA,CAAAhC,OAAA,IAAAgC,GAAA,CAAArC,UAAA;MACA;MACA;MACA;IACA;;IACA;IACA2C,sBAAAC,GAAA;MACA,KAAAzD,iBAAA,GAAAyD,GAAA;MACApB,OAAA,CAAAC,GAAA,MAAAtC,iBAAA;IACA;IACA;IACA0D,WAAAR,GAAA;MACA,KAAA7B,aAAA;MACA,KAAAN,UAAA,CAAAN,SAAA,GAAAyC,GAAA,CAAAzC,SAAA;MACA,KAAAM,UAAA,CAAAF,UAAA,GAAAqC,GAAA,CAAArC,UAAA;MACA,KAAAE,UAAA,CAAAC,MAAA,GAAAkC,GAAA,CAAAlC,MAAA;MACA,KAAAD,UAAA,CAAAE,MAAA,GAAAiC,GAAA,CAAAjC,MAAA;MACA,KAAAF,UAAA,CAAAG,OAAA,GAAAgC,GAAA,CAAAhC,OAAA;MAEAmB,OAAA,CAAAC,GAAA,CAAAY,GAAA;IACA;IACAS,SAAA;MACA,IAAAlB,KAAA,GAAAN,YAAA,CAAAO,OAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA/D,KAAA,CACA6E,GAAA,CACA,wEACA,KAAA7C,UAAA,CAAAN,SAAA,GACA,iBACA,KAAAM,UAAA,CAAAF,UAAA,GACA,aACA,KAAAE,UAAA,CAAAC,MAAA,GACA,aACA,KAAAD,UAAA,CAAAE,MAAA,GACA,gBACAwB,KAAA,GACA,cACA,KAAA1B,UAAA,CAAAG,OAAA,GACA,EACA,EACAc,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA;cACA,KAAAe,QAAA;gBACAC,IAAA;gBACAtC,OAAA;cACA;cACA,KAAAgB,IAAA;cACA,KAAAN,aAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAwC,aAAAC,EAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAhB,IAAA;MACA,GACAjB,IAAA;QACAjD,KAAA,CACA6E,GAAA,CACA,kEACA,IACA,cACAE,EAAA,GACA,EACA,EACA9B,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA;YACA,KAAAe,QAAA;cACAC,IAAA;cACAtC,OAAA;YACA;YACA,KAAAgB,IAAA;UACA;QACA;MACA,GACAuC,KAAA;QACA,KAAAlB,QAAA;UACAC,IAAA;UACAtC,OAAA;QACA;MACA;IACA;IACA;IACAwD,iBAAAC,IAAA;MACA,KAAA5C,QAAA,GAAA4C,IAAA;MACA,KAAA7C,WAAA;MACA,KAAAI,IAAA;IACA;IACA;IACA0C,oBAAAC,IAAA;MACA,KAAA/C,WAAA,GAAA+C,IAAA;MACA,KAAA3C,IAAA;IACA;IACA;IACA4C,QAAA;MACA,KAAAzE,YAAA;MACA;MACA0E,UAAA;QACA;QACA,KAAA7C,IAAA;QACA,KAAA7B,YAAA;MACA;MACA;IACA;;IACA;IACA2E,OAAA;MACAC,KAAA;MACA;MACA;MACA;MACA;IACA;;IACAC,WAAAC,SAAA;MACA,OAAA3F,UAAA,CAAA2F,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAlD,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}