{"ast":null,"code":"import $http from \"../http/base.js\";\n\n//日期格式转换\nexport function formatDate(date) {\n  let time = new Date(date);\n  let year = time.getFullYear();\n  let month = time.getMonth() + 1;\n  month = month.toString().padStart(2, \"0\");\n  let day = time.getDate().toString().padStart(2, \"0\");\n  return year + \"年\" + month + \"月\" + day + \"日\";\n}\n//let id = this.$route.params.dict_id;\n//var id = this.$route.params.dict_id;\nvar idd = localStorage.getItem(\"iidd\");\nvar str = `is_del=0 and dict_id=${idd} and 1=1`;\nexport default {\n  data() {\n    return {\n      tableloading: false,\n      //加载\n      showDefaultAttr: true,\n      multipleSelection: [],\n      // 选中的行数据\n      tableData: [],\n      textarea: \"\",\n      formInline: {\n        user: \"\",\n        region: \"\",\n        data1: \"\",\n        zt: \"\"\n      },\n      str: \"\",\n      rules: {\n        dict_name: [{\n          required: true,\n          message: \"请输入字典名称\",\n          trigger: \"blur\"\n        }],\n        dict_label: [{\n          required: true,\n          message: \"请输入字典类型\",\n          trigger: \"blur\"\n        }],\n        dict_value: [{\n          required: true,\n          message: \"请输入字典类型\",\n          trigger: \"blur\"\n        }]\n      },\n      arules: {\n        dict_name: [{\n          required: true,\n          message: \"请输入字典名称\",\n          trigger: \"blur\"\n        }],\n        dict_label: [{\n          required: true,\n          message: \"请输入字典类型\",\n          trigger: \"blur\"\n        }],\n        dict_value: [{\n          required: true,\n          message: \"请输入字典类型\",\n          trigger: \"blur\"\n        }]\n      },\n      UpdateType: {\n        dict_name: \"\",\n        dict_label: \"\",\n        status: \"\",\n        remark: \"\",\n        dict_value: \"\",\n        is_default: \"\",\n        dict_code: 0\n      },\n      Type: \"\",\n      AddType: {\n        dict_name: \"\",\n        dict_label: \"\",\n        status: \"\",\n        remark: \"\",\n        dict_value: \"\",\n        is_default: \"\"\n      },\n      adialogVisible: false,\n      dialogVisible: false,\n      value: true,\n      currentPage: 1,\n      //当前页\n      pagesize: 3,\n      //每页显示数\n      rows: 0,\n      //总行数\n      strs: \"\"\n    };\n  },\n  methods: {\n    //查询方法\n    find() {\n      var idd = localStorage.getItem(\"iidd\");\n      console.log(idd);\n      // this.strs = str;\n      var id = this.$route.params.dict_id;\n      str = `is_del=0 and dict_id=${idd} and 1=1`;\n      //var str = `is_del=0 and dict_id=${id} and 1=1`;\n      console.log(id);\n      // console.log(obj.dict_id);\n      // $http.get('http://localhost:5149/api/Sys_encode/FindDataById', {\n      //   params: {\n      //     dict_id: id\n      //   }\n      // }).then(res => {\n      //   this.tableData = res;\n      //   this.rows = this.tableData.length;\n      //   console.log(res);\n      // })\n      $http.get(\"http://localhost:5149/api/Sys_encode/FindDictData\", {\n        params: {\n          CurrentPage: this.currentPage,\n          PageSize: this.pagesize,\n          str\n        }\n      }).then(res => {\n        this.tableData = res.list;\n        this.rows = res.rows;\n        console.log(res);\n      });\n      //this.search();\n    },\n\n    gb() {\n      this.$router.go(-1);\n    },\n    add() {\n      this.adialogVisible = true;\n      this.Type = this.$route.params.dict_label;\n    },\n    insertok() {\n      var uname = localStorage.getItem(\"b\");\n      var id = this.$route.params.dict_id;\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          $http.post(\"http://localhost:5149/api/Sys_encode/AddSys_dict_data?dict_label=\" + this.AddType.dict_label + \"&dict_value=\" + this.AddType.dict_value + \"&dict_type=\" + this.Type + \"&dict_name=\" + this.AddType.dict_name + \"&status=\" + this.AddType.status + \"&remark=\" + this.AddType.remark + \"&create_by=\" + uname + \"&dict_id=\" + id + \"&is_default=\" + this.AddType.is_default + \"&is_del=\" + 0 + \"\").then(res => {\n            if (res) {\n              this.$message({\n                type: \"success\",\n                message: \"新增字典成功!\"\n              });\n              this.find();\n              this.adialogVisible = false;\n            }\n          });\n        }\n      });\n    },\n    //重置\n    reset() {\n      this.formInline = {\n        region: \"\",\n        data1: \"\",\n        user: \"\",\n        zt: \"\"\n      };\n      console.log(\"reset!\");\n    },\n    //搜索\n    search() {\n      //alert(this.strs)\n      //str = \" 1=1 \";\n      // if (this.formInline.region != null) {\n      //   str += \"and dict_name  like'%\" + this.formInline.region + \"%'\";\n      // }\n      var idd = localStorage.getItem(\"iidd\");\n      str = `is_del=0 and dict_id=${idd} and 1=1`;\n      if (this.formInline.user != null) {\n        str += \"and dict_label  like'%\" + this.formInline.user + \"%'\";\n      }\n      // if (this.formInline.zt != null) {\n      //  str += \"and status  =\" + this.formInline.zt + \"\";\n      // }\n      alert(str);\n      this.find();\n    },\n    //选择\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n      console.log(this.multipleSelection);\n    },\n    //修改\n    handleEdit(obj) {\n      this.dialogVisible = true;\n      this.UpdateType.dict_name = obj.dict_name;\n      this.UpdateType.dict_label = obj.dict_label;\n      this.UpdateType.status = obj.status;\n      this.UpdateType.remark = obj.remark;\n      this.UpdateType.dict_id = obj.dict_id;\n      this.UpdateType.dict_code = obj.dict_code;\n      this.UpdateType.dict_value = obj.dict_value;\n      this.UpdateType.is_default = obj.is_default;\n      this.Type = this.$route.params.dict_label;\n      console.log(obj);\n    },\n    updateok() {\n      var uname = localStorage.getItem(\"b\");\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          $http.put(\"http://localhost:5149/api/Sys_encode/UpdateSys_dict_data?dict_label=\" + this.UpdateType.dict_label + \"&dict_value=\" + this.UpdateType.dict_value + \"&dict_type=\" + this.Type + \"&dict_name=\" + this.UpdateType.dict_name + \"&status=\" + this.UpdateType.status + \"&remark=\" + this.UpdateType.remark + \"&update_by=\" + uname + \"&dict_code=\" + this.UpdateType.dict_code + \"&is_default=0\").then(res => {\n            if (res) {\n              this.$message({\n                type: \"success\",\n                message: \"修改字典成功!\"\n              });\n              this.find();\n              this.dialogVisible = false;\n            }\n          });\n        }\n      });\n    },\n    //删除\n    handleDelete(id) {\n      this.$confirm(\"此操作将永久删除该信息, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        $http.put(\"http://localhost:5149/api/Sys_encode/Delete_dict_data?is_del=1&dict_code=\" + id + \"\").then(res => {\n          if (res) {\n            this.$message({\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n            this.find();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"error\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    //每页显示数改变事件\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.currentPage = 1;\n      this.find();\n    },\n    //页码改变事件\n    handleCurrentChange(page) {\n      this.currentPage = page;\n      this.find();\n    },\n    //刷新table\n    flushed() {\n      this.tableloading = true;\n      // 模拟获取接口数据\n      setTimeout(() => {\n        //调用find();\n        this.find();\n        this.tableloading = false;\n      }, 1000);\n      //直接this.查询方法();\n    },\n\n    //批量删除\n    delAll() {\n      alert(\"123\");\n      //   const length = this.multipleSelection.length;\n      //   for (let i = 0; i < length; i++) {\n      //     this.delarr.push(this.multipleSelection[i].PackingId)\n      //   }\n    },\n\n    handleChange(value) {\n      console.log(value);\n    },\n    filterTime(timestamp) {\n      return formatDate(timestamp);\n    }\n  },\n  mounted() {\n    this.find();\n  }\n};","map":{"version":3,"names":["$http","formatDate","date","time","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","idd","localStorage","getItem","str","data","tableloading","showDefaultAttr","multipleSelection","tableData","textarea","formInline","user","region","data1","zt","rules","dict_name","required","message","trigger","dict_label","dict_value","arules","UpdateType","status","remark","is_default","dict_code","Type","AddType","adialogVisible","dialogVisible","value","currentPage","pagesize","rows","strs","methods","find","console","log","id","$route","params","dict_id","get","CurrentPage","PageSize","then","res","list","gb","$router","go","add","insertok","uname","$refs","ruleForm","validate","valid","post","$message","type","reset","search","alert","handleSelectionChange","val","handleEdit","obj","updateok","put","handleDelete","$confirm","confirmButtonText","cancelButtonText","catch","handleSizeChange","size","handleCurrentChange","page","flushed","setTimeout","delAll","handleChange","filterTime","timestamp","mounted"],"sources":["src/components/DictionaryData.vue"],"sourcesContent":["<template>\r\n  <div id=\"kj\">\r\n    <!--头部-->\r\n    <el-breadcrumb separator=\"/\" id=\"card\">\r\n      <el-breadcrumb-item :to=\"{ path: '/Home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item\r\n        ><a href=\"javascript:void(0)\">系统设置</a></el-breadcrumb-item\r\n      >\r\n      <el-breadcrumb-item>数字字典</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!--搜索-->\r\n\r\n    <transition-group name=\"lyric\">\r\n      <div id=\"form\" v-if=\"showDefaultAttr\" key=\"1\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"字典名称\" id=\"form_top\">\r\n            <el-input\r\n              v-model=\"formInline.region\"\r\n              id=\"tex\"\r\n              placeholder=\"审批人\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典标签\" id=\"form_top\">\r\n            <el-input\r\n              v-model=\"formInline.user\"\r\n              id=\"tex\"\r\n              placeholder=\"审批人\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" id=\"form_top\">\r\n            <el-select v-model=\"formInline.zt\" id=\"tex\" placeholder=\"活动区域\">\r\n              <el-option label=\"正常\" value=\"0\">正常</el-option>\r\n              <el-option label=\"停用\" value=\"1\">停用</el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item id=\"w\">\r\n            <el-button\r\n              @click=\"search()\"\r\n              type=\"primary\"\r\n              id=\"tex1\"\r\n              icon=\"el-icon-search\"\r\n              >搜索</el-button\r\n            >\r\n            <el-button @click=\"reset()\" id=\"tex2\" icon=\"el-icon-refresh\"\r\n              >重置</el-button\r\n            >\r\n            <!-- <el-button type=\"primary\" @click=\"search\">高级搜索</el-button> -->\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </transition-group>\r\n\r\n    <!--按钮-->\r\n    <div id=\"an\">\r\n      <el-button id=\"tex3\" icon=\"el-icon-plus\" @click=\"add()\">新增</el-button>\r\n      <!-- <el-button  id=\"tex4\"  icon=\"el-icon-edit\">修改</el-button> -->\r\n      <el-button\r\n        id=\"tex5\"\r\n        @click=\"delAll()\"\r\n        icon=\"el-icon-delete\"\r\n        :disabled=\"multipleSelection.length == 0\"\r\n        >删除</el-button\r\n      >\r\n      <el-button id=\"tex7\" icon=\"el-icon-upload2\">导入</el-button>\r\n      <el-button id=\"tex6\" icon=\"el-icon-download\">导出</el-button>\r\n      <el-button id=\"tex5\" icon=\"danger\" @click=\"gb()\">关闭</el-button>\r\n    </div>\r\n    <!--隐藏-->\r\n    <div id=\"an1\">\r\n      <el-button\r\n        icon=\"el-icon-search\"\r\n        circle\r\n        @click=\"showDefaultAttr = !showDefaultAttr\"\r\n        title=\"展开\"\r\n      ></el-button>\r\n      <el-button\r\n        icon=\"el-icon-refresh\"\r\n        circle\r\n        @click=\"flushed\"\r\n        title=\"刷新\"\r\n      ></el-button>\r\n    </div>\r\n    <!-- 表单 -->\r\n    <el-table\r\n      tooltip-effect=\"dark\"\r\n      v-loading=\"tableloading\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      :data=\"tableData\"\r\n      :header-cell-style=\"{ background: '#F8F8F9', color: '#606266' }\"\r\n      id=\"tableMain\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\r\n      <el-table-column fixed prop=\"dict_code\" label=\"字典编号\" width=\"130\">\r\n      </el-table-column>\r\n      <el-table-column fixed prop=\"dict_label\" label=\"字典标签\" width=\"130\">\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"字典键值\" prop=\"dict_value\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"字典排序\" prop=\"dict_name\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"状态\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <div v-if=\"scope.row.status == 0\">\r\n            <el-tag>正常</el-tag>\r\n          </div>\r\n          <div v-if=\"scope.row.status == 1\">\r\n            <el-tag type=\"danger\">异常 </el-tag>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed prop=\"remark\" label=\"备注\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column fixed label=\"创建时间\" width=\"135\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ filterTime(scope.row.create_time) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <!-- <el-table-column label=\"状态\" width=\"130\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-switch v-model=\"scope.row.u_State\" active-color=\"#13ce66\" active-value=\"0\" inactive-value=\"1\"\r\n                        inactive-color=\"#ff4949\" @change=\"changeSwitch(scope.row)\">\r\n                    </el-switch>\r\n                </template>\r\n            </el-table-column> -->\r\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"100\">\r\n        <template slot-scope=\"scope\">\r\n          <img\r\n            src=\"../Images/bianji1.png\"\r\n            title=\"编辑\"\r\n            @click=\"handleEdit(scope.row)\"\r\n          />\r\n          <img\r\n            src=\"../Images/shanchu.png\"\r\n            style=\"margin-left: 10px\"\r\n            title=\"删除\"\r\n            @click=\"handleDelete(scope.row.dict_id)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      id=\"fenye\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"currentPage\"\r\n      :page-sizes=\"[3, 6, 9, 12]\"\r\n      :page-size=\"pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"rows\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!--添加模态框-->\r\n    <el-dialog title=\"添加数据\" :visible.sync=\"adialogVisible\" width=\"700px\">\r\n      <span>\r\n        <el-form :model=\"AddType\" :rules=\"rules\" ref=\"ruleForm\">\r\n          <el-form-item label=\"字典标签\" prop=\"dict_label\">\r\n            <el-input v-model=\"AddType.dict_label\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典键值\" prop=\"dict_value\">\r\n            <el-input v-model=\"AddType.dict_value\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典类型\">\r\n            <el-input v-model=\"Type\" :disabled=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典排序\" prop=\"dict_name\">\r\n            <el-input-number\r\n              v-model=\"AddType.dict_name\"\r\n              @change=\"handleChange\"\r\n              :min=\"1\"\r\n              :max=\"10\"\r\n              label=\"描述文字\"\r\n            ></el-input-number>\r\n          </el-form-item>\r\n          <el-form-item label=\"系统默认\" prop=\"is_default\">\r\n            <el-radio-group\r\n              v-model=\"AddType.is_default\"\r\n              style=\"margin-bottom: 0\"\r\n            >\r\n              <el-radio label=\"0\">是</el-radio>\r\n              <el-radio label=\"1\">否</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" prop=\"status\">\r\n            <el-radio-group v-model=\"AddType.status\" style=\"margin-bottom: 0\">\r\n              <el-radio label=\"0\">正常</el-radio>\r\n              <el-radio label=\"1\">停用</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item label=\"备注\" prop=\"remark\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"AddType.remark\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </span>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"adialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"insertok()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!--修改模态框-->\r\n    <el-dialog title=\"修改数据\" :visible.sync=\"dialogVisible\" width=\"700px\">\r\n      <span>\r\n        <el-form :model=\"UpdateType\" :rules=\"rules\" ref=\"ruleForm\">\r\n          <el-form-item label=\"字典标签\" prop=\"dict_label\">\r\n            <el-input v-model=\"UpdateType.dict_label\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典键值\" prop=\"dict_value\">\r\n            <el-input v-model=\"UpdateType.dict_value\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典类型\">\r\n            <el-input v-model=\"Type\" :disabled=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"字典排序\" prop=\"dict_name\">\r\n            <el-input-number\r\n              v-model=\"UpdateType.dict_name\"\r\n              @change=\"handleChange\"\r\n              :min=\"1\"\r\n              :max=\"10\"\r\n              label=\"描述文字\"\r\n            ></el-input-number>\r\n          </el-form-item>\r\n          <el-form-item label=\"系统默认\" prop=\"is_default\">\r\n            <el-radio-group\r\n              v-model=\"UpdateType.is_default\"\r\n              style=\"margin-bottom: 0\"\r\n            >\r\n              <el-radio label=\"0\">是</el-radio>\r\n              <el-radio label=\"1\">否</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" prop=\"status\">\r\n            <el-radio-group\r\n              v-model=\"UpdateType.status\"\r\n              style=\"margin-bottom: 0\"\r\n            >\r\n              <el-radio label=\"0\">正常</el-radio>\r\n              <el-radio label=\"1\">停用</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item label=\"备注\" prop=\"remark\">\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入内容\"\r\n              v-model=\"UpdateType.remark\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </span>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateok()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $http from \"../http/base.js\";\r\n\r\n//日期格式转换\r\nexport function formatDate(date) {\r\n  let time = new Date(date);\r\n\r\n  let year = time.getFullYear();\r\n\r\n  let month = time.getMonth() + 1;\r\n  month = month.toString().padStart(2, \"0\");\r\n  let day = time.getDate().toString().padStart(2, \"0\");\r\n  return year + \"年\" + month + \"月\" + day + \"日\";\r\n}\r\n//let id = this.$route.params.dict_id;\r\n//var id = this.$route.params.dict_id;\r\nvar idd = localStorage.getItem(\"iidd\");\r\nvar str = `is_del=0 and dict_id=${idd} and 1=1`;\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableloading: false, //加载\r\n      showDefaultAttr: true,\r\n      multipleSelection: [], // 选中的行数据\r\n      tableData: [],\r\n      textarea: \"\",\r\n      formInline: {\r\n        user: \"\",\r\n        region: \"\",\r\n        data1: \"\",\r\n        zt: \"\",\r\n      },\r\n      str: \"\",\r\n      rules: {\r\n        dict_name: [\r\n          { required: true, message: \"请输入字典名称\", trigger: \"blur\" },\r\n        ],\r\n        dict_label: [\r\n          { required: true, message: \"请输入字典类型\", trigger: \"blur\" },\r\n        ],\r\n        dict_value: [\r\n          {\r\n            required: true,\r\n            message: \"请输入字典类型\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n      arules: {\r\n        dict_name: [\r\n          { required: true, message: \"请输入字典名称\", trigger: \"blur\" },\r\n        ],\r\n        dict_label: [\r\n          { required: true, message: \"请输入字典类型\", trigger: \"blur\" },\r\n        ],\r\n        dict_value: [\r\n          {\r\n            required: true,\r\n            message: \"请输入字典类型\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n      UpdateType: {\r\n        dict_name: \"\",\r\n        dict_label: \"\",\r\n        status: \"\",\r\n        remark: \"\",\r\n        dict_value: \"\",\r\n        is_default: \"\",\r\n        dict_code: 0,\r\n      },\r\n      Type: \"\",\r\n      AddType: {\r\n        dict_name: \"\",\r\n        dict_label: \"\",\r\n        status: \"\",\r\n        remark: \"\",\r\n        dict_value: \"\",\r\n        is_default: \"\",\r\n      },\r\n      adialogVisible: false,\r\n      dialogVisible: false,\r\n      value: true,\r\n      currentPage: 1, //当前页\r\n      pagesize: 3, //每页显示数\r\n      rows: 0, //总行数\r\n      strs: \"\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    //查询方法\r\n    find() {\r\n      var idd = localStorage.getItem(\"iidd\");\r\n      console.log(idd);\r\n      // this.strs = str;\r\n      var id = this.$route.params.dict_id;\r\n      str = `is_del=0 and dict_id=${idd} and 1=1`;\r\n      //var str = `is_del=0 and dict_id=${id} and 1=1`;\r\n      console.log(id);\r\n      // console.log(obj.dict_id);\r\n      // $http.get('http://localhost:5149/api/Sys_encode/FindDataById', {\r\n      //   params: {\r\n      //     dict_id: id\r\n      //   }\r\n      // }).then(res => {\r\n      //   this.tableData = res;\r\n      //   this.rows = this.tableData.length;\r\n      //   console.log(res);\r\n      // })\r\n      $http\r\n        .get(\"http://localhost:5149/api/Sys_encode/FindDictData\", {\r\n          params: {\r\n            CurrentPage: this.currentPage,\r\n            PageSize: this.pagesize,\r\n            str,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.tableData = res.list;\r\n          this.rows = res.rows;\r\n          console.log(res);\r\n        });\r\n      //this.search();\r\n    },\r\n    gb() {\r\n      this.$router.go(-1);\r\n    },\r\n    add() {\r\n      this.adialogVisible = true;\r\n      this.Type = this.$route.params.dict_label;\r\n    },\r\n    insertok() {\r\n      var uname = localStorage.getItem(\"b\");\r\n      var id = this.$route.params.dict_id;\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          $http\r\n            .post(\r\n              \"http://localhost:5149/api/Sys_encode/AddSys_dict_data?dict_label=\" +\r\n                this.AddType.dict_label +\r\n                \"&dict_value=\" +\r\n                this.AddType.dict_value +\r\n                \"&dict_type=\" +\r\n                this.Type +\r\n                \"&dict_name=\" +\r\n                this.AddType.dict_name +\r\n                \"&status=\" +\r\n                this.AddType.status +\r\n                \"&remark=\" +\r\n                this.AddType.remark +\r\n                \"&create_by=\" +\r\n                uname +\r\n                \"&dict_id=\" +\r\n                id +\r\n                \"&is_default=\" +\r\n                this.AddType.is_default +\r\n                \"&is_del=\" +\r\n                0 +\r\n                \"\"\r\n            )\r\n            .then((res) => {\r\n              if (res) {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"新增字典成功!\",\r\n                });\r\n                this.find();\r\n                this.adialogVisible = false;\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n    //重置\r\n    reset() {\r\n      this.formInline = {\r\n        region: \"\",\r\n        data1: \"\",\r\n        user: \"\",\r\n        zt: \"\",\r\n      };\r\n      console.log(\"reset!\");\r\n    },\r\n    //搜索\r\n    search() {\r\n      //alert(this.strs)\r\n      //str = \" 1=1 \";\r\n      // if (this.formInline.region != null) {\r\n      //   str += \"and dict_name  like'%\" + this.formInline.region + \"%'\";\r\n      // }\r\n      var idd = localStorage.getItem(\"iidd\");\r\n\r\n      str = `is_del=0 and dict_id=${idd} and 1=1`;\r\n      if (this.formInline.user != null) {\r\n        str += \"and dict_label  like'%\" + this.formInline.user + \"%'\";\r\n      }\r\n      // if (this.formInline.zt != null) {\r\n      //  str += \"and status  =\" + this.formInline.zt + \"\";\r\n      // }\r\n      alert(str);\r\n      this.find();\r\n    },\r\n\r\n    //选择\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n      console.log(this.multipleSelection);\r\n    },\r\n    //修改\r\n    handleEdit(obj) {\r\n      this.dialogVisible = true;\r\n      this.UpdateType.dict_name = obj.dict_name;\r\n      this.UpdateType.dict_label = obj.dict_label;\r\n      this.UpdateType.status = obj.status;\r\n      this.UpdateType.remark = obj.remark;\r\n      this.UpdateType.dict_id = obj.dict_id;\r\n      this.UpdateType.dict_code = obj.dict_code;\r\n      this.UpdateType.dict_value = obj.dict_value;\r\n      this.UpdateType.is_default = obj.is_default;\r\n      this.Type = this.$route.params.dict_label;\r\n      console.log(obj);\r\n    },\r\n    updateok() {\r\n      var uname = localStorage.getItem(\"b\");\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          $http\r\n            .put(\r\n              \"http://localhost:5149/api/Sys_encode/UpdateSys_dict_data?dict_label=\" +\r\n                this.UpdateType.dict_label +\r\n                \"&dict_value=\" +\r\n                this.UpdateType.dict_value +\r\n                \"&dict_type=\" +\r\n                this.Type +\r\n                \"&dict_name=\" +\r\n                this.UpdateType.dict_name +\r\n                \"&status=\" +\r\n                this.UpdateType.status +\r\n                \"&remark=\" +\r\n                this.UpdateType.remark +\r\n                \"&update_by=\" +\r\n                uname +\r\n                \"&dict_code=\" +\r\n                this.UpdateType.dict_code +\r\n                \"&is_default=0\"\r\n            )\r\n            .then((res) => {\r\n              if (res) {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"修改字典成功!\",\r\n                });\r\n                this.find();\r\n                this.dialogVisible = false;\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n    //删除\r\n    handleDelete(id) {\r\n      this.$confirm(\"此操作将永久删除该信息, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          $http\r\n            .put(\r\n              \"http://localhost:5149/api/Sys_encode/Delete_dict_data?is_del=1&dict_code=\" +\r\n                id +\r\n                \"\"\r\n            )\r\n            .then((res) => {\r\n              if (res) {\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: \"删除成功!\",\r\n                });\r\n                this.find();\r\n              }\r\n            });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    //每页显示数改变事件\r\n    handleSizeChange(size) {\r\n      this.pagesize = size;\r\n      this.currentPage = 1;\r\n      this.find();\r\n    },\r\n    //页码改变事件\r\n    handleCurrentChange(page) {\r\n      this.currentPage = page;\r\n      this.find();\r\n    },\r\n    //刷新table\r\n    flushed() {\r\n      this.tableloading = true;\r\n      // 模拟获取接口数据\r\n      setTimeout(() => {\r\n        //调用find();\r\n        this.find();\r\n        this.tableloading = false;\r\n      }, 1000);\r\n      //直接this.查询方法();\r\n    },\r\n    //批量删除\r\n    delAll() {\r\n      alert(\"123\");\r\n      //   const length = this.multipleSelection.length;\r\n      //   for (let i = 0; i < length; i++) {\r\n      //     this.delarr.push(this.multipleSelection[i].PackingId)\r\n      //   }\r\n    },\r\n    handleChange(value) {\r\n      console.log(value);\r\n    },\r\n    filterTime(timestamp) {\r\n      return formatDate(timestamp);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.find();\r\n  },\r\n};\r\n</script>\r\n<style scoped src=\"../CSS/public.css\"></style>\r\n\r\n<style>\r\n#w {\r\n  margin-left: 20px;\r\n}\r\n\r\n#card {\r\n  height: 35px;\r\n  line-height: 35px;\r\n  margin-left: 20px;\r\n}\r\n\r\n#form {\r\n  margin-top: 15px;\r\n  width: 1020px;\r\n  box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.2);\r\n  margin-left: 65px;\r\n}\r\n\r\n#form_top {\r\n  margin-right: 25px !important;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.el-col-2 {\r\n  width: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.el-form--inline .el-form-item__label {\r\n  float: none;\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  font-size: 13px;\r\n}\r\n\r\n#tex {\r\n  width: 240px;\r\n  height: 32px;\r\n}\r\n\r\n#tex1 {\r\n  width: 28px !important;\r\n  color: #fff;\r\n  background-color: #409eff;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex2 {\r\n  width: 28px !important;\r\n  color: #000;\r\n  background-color: #fff;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n}\r\n\r\n#tex3 {\r\n  border: 1px solid #add2fb;\r\n  color: #448ef8;\r\n  background-color: #eaf4fe;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex4 {\r\n  border: 1px solid #d7f4e1;\r\n  color: #8edfa8;\r\n  background-color: #ebf9f1;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex5 {\r\n  border: 1px solid #f9dcdc;\r\n  color: #f29895;\r\n  background-color: #fceeed;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex6 {\r\n  border: 1px solid #fae4a2;\r\n  color: #f8c341;\r\n  background-color: #fef8e8;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex7 {\r\n  border: 1px solid #d3d4d6;\r\n  color: #919398;\r\n  background-color: #f4f4f5;\r\n  width: 28px !important;\r\n  line-height: 28px !important;\r\n  width: 73px !important;\r\n  padding: 0px !important;\r\n  margin-left: 20px;\r\n}\r\n\r\n#tex3:hover {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n}\r\n\r\n#tex4:hover {\r\n  background-color: #5fcb71;\r\n  color: #fff;\r\n}\r\n\r\n#tex5:hover {\r\n  background-color: #ff4949;\r\n  color: #fff;\r\n}\r\n\r\n#tex6:hover {\r\n  background-color: #f5bd41;\r\n  color: #fff;\r\n}\r\n\r\n#tex7:hover {\r\n  background-color: #919398;\r\n  color: #fff;\r\n}\r\n\r\n#an1 {\r\n  float: right;\r\n  position: relative;\r\n  top: 9px;\r\n  right: 64px;\r\n}\r\n\r\n.lyric-enter,\r\n.lyric-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(15px);\r\n}\r\n\r\n.lyric-enter-to,\r\n.lyric-leave {\r\n  opacity: 1;\r\n}\r\n\r\n.lyric-enter-active,\r\n.lyric-leave-active {\r\n  transition: all 0.4s ease-out;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}