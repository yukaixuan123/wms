{"ast":null,"code":"import $http from '../http/base.js';\nimport axios from \"axios\";\nvar rid = 0;\nexport default {\n  data() {\n    return {\n      tableloading: false,\n      //加载\n      showDefaultAttr: true,\n      multipleSelection: [],\n      // 选中的行数据\n      tableData: [],\n      formInline: {\n        user: '',\n        region: ''\n      },\n      tableData: [],\n      //表格数据\n      treeData: [],\n      //树控件的数据\n      defualtkeys: [],\n      //默认选中的节点集合\n      treeProps: {\n        label: \"text\",\n        children: \"children\"\n      },\n      AddRoles: {\n        rolesName: \"\",\n        rolesState: 0,\n        rolesAuthority: \"\"\n      },\n      rules: {\n        rolesName: [{\n          required: true,\n          message: '请输入角色名称',\n          trigger: 'blur'\n        }],\n        rolesAuthority: [{\n          required: true,\n          message: '请输入角色说明',\n          trigger: 'blur'\n        }]\n      },\n      direction: 'rtl',\n      dialogVisible: false,\n      adialogVisible: false,\n      currentPage: 1,\n      //当前页\n      pagesize: 3,\n      //每页显示数\n      rows: 0 //总行数\n    };\n  },\n\n  methods: {\n    //查询方法\n    find() {\n      $http.get('http://localhost:5149/api/Roless/RolesFind', {\n        params: {\n          page: this.currentPage,\n          pageSize: this.pagesize,\n          gw: this.formInline.user,\n          zt: this.formInline.region\n        }\n      }).then(res => {\n        this.list = res.data;\n        this.tableData = res.data;\n        this.rows = res.totalCount;\n        console.log(res);\n      });\n      // $http.get('http://localhost:5149/api/Users/FindUser', {\n      //     params: {\n      //         CurrentPage: this.currentPage,\n      //         PageSize: this.pagesize,\n      //         str\n      //     }\n      // }).then(res => {\n      //     this.tableData = res.list;\n      //     this.rows = res.rows;\n\n      //     console.log(res);\n      // })\n    },\n\n    //修改用户状态\n    changeSwitch(row) {\n      console.log(row);\n      $http.put('http://localhost:5149/api/Roless/UpdateRolessState?roleId=' + row.rolesID + '&roleState=' + row.rolesState + '').then(res => {\n        if (row.rolesState == '0') {\n          this.$message({\n            type: 'success',\n            message: '状态启用成功'\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: '状态停用'\n          });\n        }\n      }).catch(err => {\n        //     console.log(err);\n      });\n    },\n    handleClose(done) {\n      this.$confirm('确认关闭？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    cancelForm() {\n      this.dialogVisible = false;\n    },\n    //重置\n    reset() {\n      console.log('reset!');\n    },\n    //新增\n    insert() {\n      this.adialogVisible = true;\n    },\n    insertok() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          $http.post('http://localhost:5149/api/Roless/AddRoles', {\n            rolesName: this.AddRoles.rolesName,\n            rolesState: this.AddRoles.rolesState,\n            rolesAuthority: this.AddRoles.rolesAuthority\n          }).then(res => {\n            if (res) {\n              this.$message({\n                type: 'success',\n                message: '新增用户成功!'\n              });\n              this.find();\n              this.adialogVisible = false;\n            }\n          });\n        }\n      });\n    },\n    //搜索\n    search() {\n      this.find();\n    },\n    //选择\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n      console.log(this.multipleSelection);\n    },\n    //修改\n    handleEdit(obj) {\n      rid = obj.rolesID;\n      console.log(obj);\n      this.dialogVisible = true;\n      this.doLoadTreeNodes();\n    },\n    //删除\n    handleDelete(id) {\n      this.$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        $http.delete('http://localhost:5149/api/Roless/RemoveRoles?roleId=' + id + '').then(res => {\n          if (res) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n          }\n          this.find();\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'error',\n          message: '已取消删除'\n        });\n      });\n    },\n    //每页显示数改变事件\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.currentPage = 1;\n      this.find();\n    },\n    //页码改变事件\n    handleCurrentChange(page) {\n      this.currentPage = page;\n      this.find();\n    },\n    //刷新table\n    flushed() {\n      this.tableloading = true;\n      // 模拟获取接口数据\n      setTimeout(() => {\n        //调用find();\n        this.find();\n        this.tableloading = false;\n      }, 1000);\n      //直接this.查询方法();\n    },\n\n    //批量删除\n    delAll() {\n      alert(\"123\");\n      //   const length = this.multipleSelection.length;\n      //   for (let i = 0; i < length; i++) {\n      //     this.delarr.push(this.multipleSelection[i].PackingId)\n      //   }\n    },\n\n    //树状查询\n    doLoadTreeNodes: function () {\n      var t = this;\n      axios.all([this.getTree(), this.getQuan()]).then(axios.spread(function (acct, perms) {\n        t.treeData = acct.data;\n        t.defualtkeys = perms.data;\n        console.log(t.treeData);\n      }));\n    },\n    getTree: function () {\n      return axios.get('http://localhost:5149/api/Roless/GetTrees');\n    },\n    getQuan: function () {\n      return axios.get('http://localhost:5149/api/Roless/GetQuan?RoelsId=' + rid + '');\n    },\n    closeDrawer() {\n      //1 获取选中节点的值，发送ajax做修改操作\n      var zhi = [...this.$refs.tree.getCheckedKeys(), ...this.$refs.tree.getHalfCheckedKeys()];\n      console.log(zhi);\n      $http.get('http://localhost:5149/api/Roless/GetRolesById', {\n        params: {\n          RolesID: rid\n        }\n      }).then(res => {\n        if (Array.isArray(res) && res.length === 0) {\n          console.log(2);\n          for (let i = 0; i < zhi.length; i++) {\n            var val = zhi[i];\n            $http.put('http://localhost:5149/api/Roless/UpdateRoles?roleId=' + rid + '&pid=' + val + '').then(res => {});\n          }\n          this.$message({\n            type: \"success\",\n            message: \"权限修改成功\"\n          });\n        } else {\n          console.log(1);\n          //删除原有数据\n          $http.delete('http://localhost:5149/api/Roless/DeleteRoles?roleId=' + rid + '').then(res => {\n            if (res) {\n              if (zhi.length != 0) {\n                console.log(1);\n                for (let i = 0; i < zhi.length; i++) {\n                  var val = zhi[i];\n                  $http.put('http://localhost:5149/api/Roless/UpdateRoles?roleId=' + rid + '&pid=' + val + '').then(res => {});\n                }\n                this.$message({\n                  type: \"success\",\n                  message: \"权限修改成功\"\n                });\n              }\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        console.log(12);\n      });\n      //var qids = zhi.join(',');\n\n      this.dialogVisible = false;\n    }\n  },\n  mounted() {\n    this.find();\n  }\n};","map":{"version":3,"names":["$http","axios","rid","data","tableloading","showDefaultAttr","multipleSelection","tableData","formInline","user","region","treeData","defualtkeys","treeProps","label","children","AddRoles","rolesName","rolesState","rolesAuthority","rules","required","message","trigger","direction","dialogVisible","adialogVisible","currentPage","pagesize","rows","methods","find","get","params","page","pageSize","gw","zt","then","res","list","totalCount","console","log","changeSwitch","row","put","rolesID","$message","type","catch","err","handleClose","done","$confirm","confirmButtonText","cancelButtonText","_","cancelForm","reset","insert","insertok","$refs","ruleForm","validate","valid","post","search","handleSelectionChange","val","handleEdit","obj","doLoadTreeNodes","handleDelete","id","delete","handleSizeChange","size","handleCurrentChange","flushed","setTimeout","delAll","alert","t","all","getTree","getQuan","spread","acct","perms","closeDrawer","zhi","tree","getCheckedKeys","getHalfCheckedKeys","RolesID","Array","isArray","length","i","mounted"],"sources":["src/components/Roles.vue"],"sourcesContent":["<template>\r\n    <div id=\"kj\">\r\n        <!--头部-->\r\n        <el-breadcrumb separator=\"/\" id=\"card\">\r\n            <el-breadcrumb-item :to=\"{ path: '/Home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item><a href=\"javascript:void(0)\">货品管理</a></el-breadcrumb-item>\r\n            <el-breadcrumb-item>货品信息</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--搜索-->\r\n\r\n        <transition-group name=\"lyric\">\r\n\r\n            <div id=\"form\" v-if=\"showDefaultAttr\" key=\"1\">\r\n                <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n                    <el-form-item label=\"岗位\" id=\"form_top\">\r\n                        <el-input v-model=\"formInline.user\" id=\"tex\" placeholder=\"审批人\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"状态\" id=\"form_top\">\r\n                        <el-select v-model=\"formInline.region\" id=\"tex\" placeholder=\"活动区域\">                           \r\n                            <el-option label=\"启用\" value=\"0\"></el-option>\r\n                             <el-option label=\"停用\" value=\"1\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                  \r\n                    <el-form-item id=\"w\">\r\n                        <el-button @click=\"search()\" type=\"primary\" id=\"tex1\" icon=\"el-icon-search\">搜索</el-button>\r\n                        <el-button @click=\"reset()\" id=\"tex2\" icon=\"el-icon-refresh\">重置</el-button>\r\n                        <!-- <el-button type=\"primary\" @click=\"search\">高级搜索</el-button> -->\r\n                    </el-form-item>\r\n                </el-form>\r\n            </div>\r\n        </transition-group>\r\n\r\n        <!--按钮-->\r\n        <div id=\"an\">\r\n            <el-button id=\"tex3\" icon=\"el-icon-plus\" @click=\"insert()\">新增</el-button>\r\n            <!-- <el-button  id=\"tex4\"  icon=\"el-icon-edit\">修改</el-button> -->\r\n            <el-button id=\"tex5\" @click=\"delAll()\" icon=\"el-icon-delete\"\r\n                :disabled=\"multipleSelection.length == 0\">删除</el-button>\r\n            <el-button id=\"tex7\" icon=\"el-icon-upload2\">导入</el-button>\r\n            <el-button id=\"tex6\" icon=\"el-icon-download\">导出</el-button>\r\n        </div>\r\n        <!--隐藏-->\r\n        <div id=\"an1\">\r\n            <el-button icon=\"el-icon-search\" circle @click=\"showDefaultAttr = !showDefaultAttr\" title=\"展开\"></el-button>\r\n            <el-button icon=\"el-icon-refresh\" circle @click=\"flushed\" title=\"刷新\"></el-button>\r\n        </div>\r\n        <!-- 表单 -->\r\n        <el-table tooltip-effect=\"dark\" v-loading=\"tableloading\" @selection-change=\"handleSelectionChange\" :data=\"tableData\"\r\n            :header-cell-style=\"{ background: '#F8F8F9', color: '#606266' }\" id=\"tableMain1\">\r\n            <el-table-column type=\"selection\" width=\"55\">\r\n            </el-table-column>\r\n            <el-table-column fixed prop=\"rolesID\" label=\"序号\" width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column fixed prop=\"rolesName\" label=\"角色名称\" width=\"200\">\r\n            </el-table-column>\r\n            <el-table-column fixed prop=\"rolesAuthority\" label=\"备注\" width=\"200\">\r\n            </el-table-column>\r\n            <el-table-column label=\"状态\" width=\"200\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-switch v-model=\"scope.row.rolesState\" active-color=\"#13ce66\" active-value=\"0\" inactive-value=\"1\"\r\n                        inactive-color=\"#ff4949\" @change=\"changeSwitch(scope.row)\">\r\n                    </el-switch>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <img src=\"../Images/bianji1.png\" title=\"编辑\" @click=\"handleEdit(scope.row)\">\r\n                    <img src=\"../Images/shanchu.png\" style=\"margin-left: 10px;\" title=\"删除\"\r\n                        @click=\"handleDelete(scope.row.rolesID)\">\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页 -->\r\n        <el-pagination id=\"fenye\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n            :current-page=\"currentPage\" :page-sizes=\"[3, 6, 9, 12]\" :page-size=\"pagesize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\" :total=\"rows\">\r\n        </el-pagination>\r\n      <!--权限的模态框-->          \r\n    <el-drawer id=\"bj\"\r\n              title=\"编辑\"\r\n              :visible.sync=\"dialogVisible\"\r\n              :direction=\"direction\"\r\n              :before-close=\"handleClose\">\r\n             <div class=\"demo-drawer__content\">\r\n            <el-tree\r\n                 ref=\"tree\"\r\n                  show-checkbox\r\n                  :data=\"treeData\"\r\n                  :props=\"treeProps\"\r\n                  node-key=\"id\"\r\n                  :default-expand-all=\"true\"\r\n                  :default-checked-keys=\"defualtkeys\"\r\n                ></el-tree>\r\n                <div class=\"demo-drawer__footer\" id=\"didi\">\r\n                  <el-button  id=\"tj\" @click=\"closeDrawer()\">提交</el-button>\r\n                  <el-button @click=\"cancelForm\" id=\"qx\">取 消</el-button>\r\n                </div>\r\n              </div>\r\n            </el-drawer>\r\n    <!--角色添加模态框-->\r\n      <el-dialog title=\"编辑菜单\" :visible.sync=\"adialogVisible\" width=\"700px\" >\r\n                   <span>\r\n                            <el-form :model=\"AddRoles\" :rules=\"rules\" ref=\"ruleForm\" >                       \r\n                              <el-form-item label=\"角色名称\" prop=\"rolesName\">\r\n                                <el-input v-model=\"AddRoles.rolesName\"></el-input>         \r\n                              </el-form-item>                        \r\n                              <el-form-item label=\"角色说明\" prop=\"rolesAuthority\">\r\n                                <el-input v-model=\"AddRoles.rolesAuthority\"></el-input>\r\n                              </el-form-item>\r\n                        <el-form-item label=\"状态\" prop=\"rolesState\">\r\n                              <el-radio-group v-model=\"AddRoles.rolesState\" style=\"margin-bottom: 0\">\r\n                                <el-radio  label=\"0\" >正常</el-radio>\r\n                                 <el-radio  label=\"1\">停用</el-radio>\r\n                              </el-radio-group>\r\n                        </el-form-item>\r\n                            </el-form>\r\n                    </span>\r\n                  <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"adialogVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"insertok()\">确 定</el-button>\r\n                  </div>\r\n                </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport $http from '../http/base.js';\r\nimport axios from \"axios\";\r\nvar rid = 0;\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableloading: false,//加载\r\n            showDefaultAttr: true,\r\n            multipleSelection: [],// 选中的行数据\r\n            tableData: [],\r\n            formInline: {\r\n                user: '',\r\n                region: '',\r\n            },\r\n               tableData: [],//表格数据\r\n            treeData: [],//树控件的数据\r\n            defualtkeys: [], //默认选中的节点集合\r\n            treeProps: {\r\n                label: \"text\",\r\n                children: \"children\",\r\n            },\r\n            AddRoles: {\r\n                rolesName:\"\",\r\n                rolesState:0,\r\n                rolesAuthority:\"\"\r\n            },\r\n            rules: {\r\n                 rolesName: [\r\n                    { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n                ],\r\n                   rolesAuthority: [\r\n                    { required: true, message: '请输入角色说明', trigger: 'blur' },\r\n                ],\r\n                \r\n            },\r\n             direction: 'rtl',\r\n            dialogVisible:false,\r\n            adialogVisible:false,\r\n            currentPage: 1,//当前页\r\n            pagesize: 3,//每页显示数\r\n            rows: 0,//总行数\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        //查询方法\r\n        find() {\r\n            $http.get('http://localhost:5149/api/Roless/RolesFind', {\r\n                params: {\r\n                    page: this.currentPage,\r\n                    pageSize: this.pagesize,\r\n                    gw: this.formInline.user,\r\n                    zt: this.formInline.region,\r\n                }\r\n            }).then(res => {\r\n                this.list = res.data;\r\n                this.tableData = res.data\r\n                this.rows = res.totalCount;\r\n                console.log(res);\r\n            })\r\n            // $http.get('http://localhost:5149/api/Users/FindUser', {\r\n            //     params: {\r\n            //         CurrentPage: this.currentPage,\r\n            //         PageSize: this.pagesize,\r\n            //         str\r\n            //     }\r\n            // }).then(res => {\r\n            //     this.tableData = res.list;\r\n            //     this.rows = res.rows;\r\n\r\n            //     console.log(res);\r\n            // })\r\n        },\r\n        //修改用户状态\r\n        changeSwitch(row) {\r\n            console.log(row);\r\n            $http.put('http://localhost:5149/api/Roless/UpdateRolessState?roleId=' + row.rolesID + '&roleState=' + row.rolesState + '').then(res => {\r\n                if (row.rolesState == '0') {\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '状态启用成功'\r\n                    });\r\n                } else {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '状态停用'\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                //     console.log(err);\r\n            })\r\n        },\r\n        handleClose(done) {\r\n            this.$confirm('确认关闭？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            })\r\n                .then(_ => {\r\n                    done();\r\n                })\r\n                .catch(_ => { });\r\n        },\r\n        cancelForm() {\r\n            this.dialogVisible = false;\r\n        },\r\n        //重置\r\n        reset() {\r\n            console.log('reset!');\r\n        },\r\n        //新增\r\n        insert() {\r\n            this.adialogVisible = true;\r\n          \r\n        },\r\n        insertok() {\r\n            this.$refs.ruleForm.validate((valid) => {\r\n                if (valid) {\r\n                    $http.post('http://localhost:5149/api/Roless/AddRoles', {\r\n                        rolesName: this.AddRoles.rolesName,\r\n                        rolesState: this.AddRoles.rolesState,\r\n                        rolesAuthority: this.AddRoles.rolesAuthority\r\n                    }).then(res => {\r\n                        if (res) {\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '新增用户成功!'\r\n                            });\r\n                            this.find();\r\n                            this.adialogVisible = false;\r\n                        }\r\n                    })\r\n                }\r\n            })              \r\n        },\r\n        //搜索\r\n        search() {\r\n            this.find();\r\n        },\r\n        //选择\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n            console.log(this.multipleSelection);\r\n        },\r\n        //修改\r\n        handleEdit(obj) {\r\n            rid = obj.rolesID;\r\n            console.log(obj);\r\n            this.dialogVisible = true;\r\n            this.doLoadTreeNodes();\r\n        },\r\n        //删除\r\n        handleDelete(id) {\r\n            this.$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                $http.delete('http://localhost:5149/api/Roless/RemoveRoles?roleId='+id+'').then(res => {\r\n                    if (res) {\r\n                     this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                    }\r\n                    this.find();\r\n            })\r\n               \r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: 'error',\r\n                    message: '已取消删除'\r\n                });\r\n            });\r\n        },\r\n        //每页显示数改变事件\r\n        handleSizeChange(size) {\r\n            this.pagesize = size;\r\n            this.currentPage = 1;\r\n            this.find();\r\n        },\r\n        //页码改变事件\r\n        handleCurrentChange(page) {\r\n            this.currentPage = page;\r\n            this.find();\r\n        },\r\n        //刷新table\r\n        flushed() {\r\n            this.tableloading = true\r\n            // 模拟获取接口数据\r\n            setTimeout(() => {\r\n                //调用find();\r\n                this.find();\r\n                this.tableloading = false\r\n            }, 1000)\r\n            //直接this.查询方法();\r\n        },\r\n        //批量删除\r\n        delAll() {\r\n            alert(\"123\");\r\n            //   const length = this.multipleSelection.length;\r\n            //   for (let i = 0; i < length; i++) {\r\n            //     this.delarr.push(this.multipleSelection[i].PackingId)\r\n            //   }\r\n        },\r\n        //树状查询\r\n        doLoadTreeNodes: function () {\r\n             var t = this;\r\n            axios.all([this.getTree(), this.getQuan()])\r\n                .then(axios.spread(function (acct, perms) {\r\n                    t.treeData = acct.data;\r\n                    t.defualtkeys = perms.data;\r\n                    console.log(t.treeData);\r\n                }));\r\n        },\r\n         getTree: function () {\r\n            return axios.get('http://localhost:5149/api/Roless/GetTrees')\r\n        },\r\n        getQuan: function () {\r\n            return axios.get('http://localhost:5149/api/Roless/GetQuan?RoelsId=' + rid + '')\r\n        }, \r\n        closeDrawer() {\r\n            //1 获取选中节点的值，发送ajax做修改操作\r\n            var zhi = [\r\n                ...this.$refs.tree.getCheckedKeys(),\r\n                ...this.$refs.tree.getHalfCheckedKeys()\r\n            ]\r\n            console.log(zhi);\r\n            \r\n            $http.get('http://localhost:5149/api/Roless/GetRolesById', {\r\n                params: {\r\n                    RolesID:rid\r\n                }\r\n            }).then(res => {\r\n                if (Array.isArray(res) && res.length === 0) {\r\n                       console.log(2);\r\n                    for (let i = 0; i < zhi.length; i++) {\r\n                        var val = zhi[i];\r\n                        $http.put('http://localhost:5149/api/Roless/UpdateRoles?roleId=' + rid + '&pid=' + val + '').then(res => {\r\n                        })\r\n                    }\r\n                    this.$message({\r\n                        type: \"success\",\r\n                        message: \"权限修改成功\",\r\n                    })\r\n                                \r\n                } else {\r\n                    console.log(1);\r\n                    //删除原有数据\r\n                      $http.delete('http://localhost:5149/api/Roless/DeleteRoles?roleId=' + rid + '').then(res => {\r\n                        if (res) {\r\n                            if (zhi.length != 0) {\r\n                                console.log(1);\r\n                                  for (let i = 0; i < zhi.length; i++) {\r\n                                    var val = zhi[i];\r\n                                    $http.put('http://localhost:5149/api/Roless/UpdateRoles?roleId=' + rid + '&pid=' + val + '').then(res => {\r\n                                    })\r\n                                }\r\n                                this.$message({\r\n                                    type: \"success\",\r\n                                    message: \"权限修改成功\",\r\n                                })\r\n                                \r\n                            }\r\n                        }                       \r\n                      })\r\n                      \r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\nconsole.log(12);\r\n            })\r\n          //var qids = zhi.join(',');\r\n           \r\n            \r\n            this. dialogVisible = false;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.find();\r\n    }\r\n}\r\n</script>\r\n<style scoped src=\"../CSS/public.css\"></style>\r\n\r\n<style>\r\n#w {\r\n    margin-left: 20px;\r\n}\r\n#tableMain1{\r\n    margin-top: 65px;\r\n    margin-left: 60px;\r\n    width: 1030px;\r\n}\r\n\r\n#card {\r\n    height: 35px;\r\n    line-height: 35px;\r\n    margin-left: 20px;\r\n}\r\n\r\n#form {\r\n    margin-top: 15px;\r\n    width: 1020px;\r\n    box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.2);\r\n    margin-left: 65px;\r\n}\r\n\r\n#form_top {\r\n    margin-right: 25px !important;\r\n    margin-bottom: 12px;\r\n}\r\n\r\n.el-col-2 {\r\n    width: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.el-form--inline .el-form-item__label {\r\n    float: none;\r\n    display: inline-block;\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n}\r\n\r\n#tex {\r\n    width: 240px;\r\n    height: 32px;\r\n}\r\n\r\n#tex1 {\r\n    width: 28px !important;\r\n    color: #FFF;\r\n    background-color: #409EFF;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n    margin-left: 20px;\r\n}\r\n\r\n#tex2 {\r\n    width: 28px !important;\r\n    color: #000;\r\n    background-color: #fff;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n}\r\n\r\n#tex3 {\r\n    border: 1px solid #ADD2FB;\r\n    color: #448EF8;\r\n    background-color: #EAF4FE;\r\n    width: 28px !important;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n    margin-left: 20px;\r\n}\r\n\r\n#tex4 {\r\n    border: 1px solid #D7F4E1;\r\n    color: #8EDFA8;\r\n    background-color: #EBF9F1;\r\n    width: 28px !important;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n    margin-left: 20px;\r\n}\r\n\r\n#tex5 {\r\n    border: 1px solid #F9DCDC;\r\n    color: #F29895;\r\n    background-color: #FCEEED;\r\n    width: 28px !important;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n    margin-left: 20px;\r\n}\r\n\r\n#tex6 {\r\n    border: 1px solid #FAE4A2;\r\n    color: #F8C341;\r\n    background-color: #FEF8E8;\r\n    width: 28px !important;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n    margin-left: 20px;\r\n}\r\n\r\n#tex7 {\r\n    border: 1px solid #D3D4D6;\r\n    color: #919398;\r\n    background-color: #F4F4F5;\r\n    width: 28px !important;\r\n    line-height: 28px !important;\r\n    width: 73px !important;\r\n    padding: 0px !important;\r\n    margin-left: 20px;\r\n}\r\n\r\n#tex3:hover {\r\n    background-color: #409EFF;\r\n    color: #fff;\r\n}\r\n\r\n#tex4:hover {\r\n    background-color: #5FCB71;\r\n    color: #fff;\r\n}\r\n\r\n#tex5:hover {\r\n    background-color: #ff4949;\r\n    color: #fff;\r\n}\r\n\r\n#tex6:hover {\r\n    background-color: #F5BD41;\r\n    color: #fff;\r\n}\r\n\r\n#tex7:hover {\r\n    background-color: #919398;\r\n    color: #fff;\r\n}\r\n\r\n#an1 {\r\n    float: right;\r\n    position: relative;\r\n    top: 9px;\r\n    right: 64px;\r\n}\r\n\r\n.lyric-enter,\r\n.lyric-leave-to {\r\n    opacity: 0;\r\n    transform: translateY(15px);\r\n}\r\n\r\n.lyric-enter-to,\r\n.lyric-leave {\r\n    opacity: 1;\r\n}\r\n\r\n.lyric-enter-active,\r\n.lyric-leave-active {\r\n    transition: all 0.4s ease-out;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}